<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geekthings.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.geekthings.po.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="work_mobile" jdbcType="VARCHAR" property="workMobile" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="portrait_uri" jdbcType="VARCHAR" property="portraitUri" />
    <result column="work_station" jdbcType="VARCHAR" property="workStation" />
    <result column="token" jdbcType="VARCHAR" property="token" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="log_aging" jdbcType="INTEGER" property="logAging" />
    <result column="customer_key" jdbcType="VARCHAR" property="customerKey" />
    <result column="user_key" jdbcType="VARCHAR" property="userKey" />
    <result column="dept_id" jdbcType="INTEGER" property="deptId" />
    <result column="ext1" jdbcType="VARCHAR" property="ext1" />
    <result column="ext2" jdbcType="VARCHAR" property="ext2" />
    <result column="ext3" jdbcType="VARCHAR" property="ext3" />
    <result column="ext4" jdbcType="VARCHAR" property="ext4" />
    <result column="ext5" jdbcType="VARCHAR" property="ext5" />
  </resultMap>
  <sql id="Base_Column_List">
    id, login_name, password, name, sex, birthday, work_mobile, mobile, email, portrait_uri, 
    work_station, token, source, create_time, create_user, update_time, update_user, 
    status, log_aging, customer_key, user_key, dept_id, ext1, ext2, ext3, ext4, ext5
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.geekthings.po.Account">
    insert into ts_account (id, login_name, password, 
      name, sex, birthday, 
      work_mobile, mobile, email, 
      portrait_uri, work_station, token, 
      source, create_time, create_user, 
      update_time, update_user, status, 
      log_aging, customer_key, user_key, 
      dept_id, ext1, ext2, 
      ext3, ext4, ext5)
    values (#{id,jdbcType=INTEGER}, #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{birthday,jdbcType=VARCHAR}, 
      #{workMobile,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{portraitUri,jdbcType=VARCHAR}, #{workStation,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, 
      #{source,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{logAging,jdbcType=INTEGER}, #{customerKey,jdbcType=VARCHAR}, #{userKey,jdbcType=VARCHAR}, 
      #{deptId,jdbcType=INTEGER}, #{ext1,jdbcType=VARCHAR}, #{ext2,jdbcType=VARCHAR}, 
      #{ext3,jdbcType=VARCHAR}, #{ext4,jdbcType=VARCHAR}, #{ext5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.geekthings.po.Account">
    insert into ts_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="workMobile != null">
        work_mobile,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="portraitUri != null">
        portrait_uri,
      </if>
      <if test="workStation != null">
        work_station,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="logAging != null">
        log_aging,
      </if>
      <if test="customerKey != null">
        customer_key,
      </if>
      <if test="userKey != null">
        user_key,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="ext1 != null">
        ext1,
      </if>
      <if test="ext2 != null">
        ext2,
      </if>
      <if test="ext3 != null">
        ext3,
      </if>
      <if test="ext4 != null">
        ext4,
      </if>
      <if test="ext5 != null">
        ext5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workMobile != null">
        #{workMobile,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="portraitUri != null">
        #{portraitUri,jdbcType=VARCHAR},
      </if>
      <if test="workStation != null">
        #{workStation,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="logAging != null">
        #{logAging,jdbcType=INTEGER},
      </if>
      <if test="customerKey != null">
        #{customerKey,jdbcType=VARCHAR},
      </if>
      <if test="userKey != null">
        #{userKey,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="ext1 != null">
        #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null">
        #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null">
        #{ext5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.geekthings.po.Account">
    update ts_account
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="workMobile != null">
        work_mobile = #{workMobile,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="portraitUri != null">
        portrait_uri = #{portraitUri,jdbcType=VARCHAR},
      </if>
      <if test="workStation != null">
        work_station = #{workStation,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="logAging != null">
        log_aging = #{logAging,jdbcType=INTEGER},
      </if>
      <if test="customerKey != null">
        customer_key = #{customerKey,jdbcType=VARCHAR},
      </if>
      <if test="userKey != null">
        user_key = #{userKey,jdbcType=VARCHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="ext1 != null">
        ext1 = #{ext1,jdbcType=VARCHAR},
      </if>
      <if test="ext2 != null">
        ext2 = #{ext2,jdbcType=VARCHAR},
      </if>
      <if test="ext3 != null">
        ext3 = #{ext3,jdbcType=VARCHAR},
      </if>
      <if test="ext4 != null">
        ext4 = #{ext4,jdbcType=VARCHAR},
      </if>
      <if test="ext5 != null">
        ext5 = #{ext5,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.geekthings.po.Account">
    update ts_account
    set login_name = #{loginName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=VARCHAR},
      work_mobile = #{workMobile,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      portrait_uri = #{portraitUri,jdbcType=VARCHAR},
      work_station = #{workStation,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      source = #{source,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      log_aging = #{logAging,jdbcType=INTEGER},
      customer_key = #{customerKey,jdbcType=VARCHAR},
      user_key = #{userKey,jdbcType=VARCHAR},
      dept_id = #{deptId,jdbcType=INTEGER},
      ext1 = #{ext1,jdbcType=VARCHAR},
      ext2 = #{ext2,jdbcType=VARCHAR},
      ext3 = #{ext3,jdbcType=VARCHAR},
      ext4 = #{ext4,jdbcType=VARCHAR},
      ext5 = #{ext5,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>